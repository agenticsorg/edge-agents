services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  supabase-studio:
    image: supabase/studio:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      SUPABASE_URL: ${SUPABASE_URL:-http://localhost:8000}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    depends_on:
      - supabase-kong

  supabase-kong:
    image: kong:2.8.1
    restart: always
    ports:
      - "8000:8000"
      - "8443:8443"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - ./kong.yml:/etc/kong/kong.yml:ro

  supabase-auth:
    image: supabase/gotrue:v2.10.0
    restart: always
    environment:
      SITE_URL: ${SITE_URL:-http://localhost:3000}
      ADDITIONAL_REDIRECT_URLS: ${ADDITIONAL_REDIRECT_URLS}
      JWT_EXPIRY: ${JWT_EXPIRY:-3600}
      DISABLE_SIGNUP: ${DISABLE_SIGNUP:-false}
      API_EXTERNAL_URL: ${SUPABASE_URL:-http://localhost:8000}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-postgres}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${SUPABASE_JWT_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}
      # Added missing required configuration
      GOTRUE_DB_DRIVER: postgres
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-postgres}
    depends_on:
      - postgres

  supabase-rest:
    image: postgrest/postgrest:v10.1.2
    restart: always
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-postgres}
      PGRST_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      PGRST_DB_SCHEMA: public,storage
      PGRST_DB_ANON_ROLE: anon
    depends_on:
      - postgres

  supabase-realtime:
    image: supabase/realtime:v2.8.0
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-postgres}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${SUPABASE_JWT_SECRET}
      REPLICATION_MODE: RLS
      SECURE_CHANNELS: ${REALTIME_ENABLED:-true}
      # Added configuration to fix network distribution issue
      ERL_AFLAGS: "-proto_dist inet_tcp"
      ENABLE_EXPERIMENTAL_REALTIME_SUBSCRIPTIONS: "true"
    depends_on:
      - postgres

  supabase-storage:
    image: supabase/storage-api:v0.40.4
    restart: always
    environment:
      ANON_KEY: ${SUPABASE_ANON_KEY}
      SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-postgres}
      STORAGE_BACKEND: ${STORAGE_BACKEND:-file}
      FILE_STORAGE_BACKEND_PATH: ${STORAGE_FILE_BACKEND_PATH:-/var/lib/storage}
      # Added missing required configuration
      FILE_SIZE_LIMIT: 52428800
      GLOBAL_S3_BUCKET: storage
      REGION: us-east-1
      TENANT_ID: default
    volumes:
      - storage-data:/var/lib/storage
    depends_on:
      - postgres
      - supabase-rest

  supabase-edge-functions:
    image: supabase/edge-runtime:v1.5.0
    restart: always
    ports:
      - "${EDGE_FUNCTIONS_PORT:-9000}:9000"
    command: ["start", "--port", "9000", "--main-service", "hello-world", "--import-map", "/supabase/functions/import_map.json"]
    environment:
      SUPABASE_URL: ${SUPABASE_URL:-http://localhost:8000}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      RUNTIME: ${EDGE_RUNTIME:-deno}
    volumes:
      - ./functions:/supabase/functions
    depends_on:
      - supabase-kong

volumes:
  postgres-data:
  storage-data:
